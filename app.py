import streamlit as st
import pandas as pd
import smtplib
from email.mime.text import MIMEText
from string import Template
from io import StringIO

st.title("üìß G·ª≠i Email C√° Nh√¢n H√≥a b·∫±ng Python")

# --- Nh·∫≠p th√¥ng tin t√†i kho·∫£n Gmail ---
st.subheader("Th√¥ng tin Gmail")
sender_email = st.text_input("Email Gmail c·ªßa b·∫°n", "")
app_password = st.text_input("App Password (kh√¥ng ph·∫£i m·∫≠t kh·∫©u Gmail th∆∞·ªùng)", "", type="password")

# --- Upload template ---
st.subheader("T·∫£i file template (.txt)")
template_file = st.file_uploader("Ch·ªçn file template", type=['txt'])
template_text = ""
if template_file is not None:
    template_text = template_file.read().decode('utf-8')
    st.text_area("N·ªôi dung template", template_text, height=150)

# --- Upload CSV ---
st.subheader("T·∫£i file CSV d·ªØ li·ªáu")
csv_file = st.file_uploader("Ch·ªçn file CSV", type=['csv'])
data = None
if csv_file is not None:
    data = pd.read_csv(csv_file)
    st.dataframe(data)

st.info("File CSV c·∫ßn c√≥ c·ªôt email (ng∆∞·ªùi nh·∫≠n) + c√°c c·ªôt placeholder kh√°c.")

# --- Subject ---
subject = st.text_input("Ti√™u ƒë·ªÅ email", "Th√¥ng b√°o k·∫øt qu·∫£")

# --- N√∫t g·ª≠i ---
if st.button("G·ª≠i email"):
    if not sender_email or not app_password:
        st.error("C·∫ßn nh·∫≠p email v√† app password.")
    elif not template_text:
        st.error("Ch∆∞a upload template.")
    elif data is None:
        st.error("Ch∆∞a upload CSV.")
    else:
        st.write("B·∫Øt ƒë·∫ßu g·ª≠i...")
        smtp_server = "smtp.gmail.com"
        port = 587
        try:
            server = smtplib.SMTP(smtp_server, port)
            server.starttls()
            server.login(sender_email, app_password)
            template = Template(template_text)

            success, fail = 0, 0
            log = []

            for idx, row in data.iterrows():
                try:
                    # T·∫°o n·ªôi dung c√° nh√¢n ho√°
                    message_body = template.safe_substitute(row.to_dict())
                    msg = MIMEText(message_body, 'plain', 'utf-8')
                    msg['From'] = sender_email
                    msg['To'] = row['email']
                    msg['Subject'] = subject

                    server.send_message(msg)
                    success += 1
                    log.append(f"‚úÖ G·ª≠i t·ªõi {row['email']} th√†nh c√¥ng")
                except Exception as e:
                    fail += 1
                    log.append(f"‚ùå L·ªói v·ªõi {row['email']}: {e}")

            server.quit()

            st.success(f"G·ª≠i xong: {success} th√†nh c√¥ng, {fail} l·ªói.")
            st.text("\n".join(log))

        except Exception as e:
            st.error(f"L·ªói khi k·∫øt n·ªëi SMTP: {e}")
